@* Define the model type for the view *@
@model IEnumerable<ECommerceProcurementSystem.Models.PurchaseOrder>
@using System.Globalization 
@{
    ViewData["Title"] = "Purchase Orders (API)"; // Clarify data source in title
    var page = ViewBag.Page as int? ?? 1;
}

<h2 class="mb-3">Purchase Orders <span class="badge bg-secondary">from API</span></h2>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-warning" role="alert">
        No purchase orders found or failed to load data from the API. Please check configuration and API status.
    </div>
}
else
{
    <table class="table table-bordered table-striped table-hover">
        <thead>
            <tr>
                <th>PO Number</th>
                <th>Vendor</th>
                <th>Award Date</th>
                <th>City</th>
                <th>Commodity Description</th>
                <th>Quantity</th>
                <th>Line Total</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var po in Model)
            {
                var firstLine = po.FirstLine;
                <tr>
                    <td>@po.Purchase_Order</td>
                    <td>@po.Vendor?.VendorName</td>
                    <td>@(po.Agreement?.Award_Date?.ToString("yyyy-MM-dd") ?? "")</td>
                    <td>@po.Vendor?.City</td>
                    <td>@firstLine?.Commodity?.Commodity_Description</td>
                    <td>@firstLine?.Quantity_Ordered</td>
                    <td>@(firstLine?.Line_Item_Total_Amount?.ToString("C", CultureInfo.CurrentCulture) ?? "")</td>
                    <td>
                        <a asp-action="Details"
                           asp-controller="PurchaseOrders"
                           asp-route-id="@po.Purchase_Order"
                           class="btn btn-sm btn-outline-info table-action-link">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @* Basic Pagination Indication (requires controller support for total pages) *@
    @if (ViewBag.Page != null && ViewBag.Page > 0)
    {
        <p>Displaying page @ViewBag.Page.</p>
        @* Add Next/Previous links here if pagination logic is fully implemented in controller/service *@
    }
}