// <auto-generated />
using ECommerceProcurementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceProcurementSystem.Migrations
{
    [DbContext(typeof(ProcurementContext))]
    partial class ProcurementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerceProcurementSystem.Models.AnnualSaleAmount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<decimal>("SaleAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Vendor_Code")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.HasIndex("Vendor_Code");

                    b.ToTable("AnnualSaleAmounts");
                });

            modelBuilder.Entity("ECommerceProcurementSystem.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityID"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("ECommerceProcurementSystem.Models.Vendor", b =>
                {
                    b.Property<int>("Vendor_Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vendor_Code"));

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Vendor_Code");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("ECommerceProcurementSystem.Models.AnnualSaleAmount", b =>
                {
                    b.HasOne("ECommerceProcurementSystem.Models.City", "City")
                        .WithMany("AnnualSaleAmounts")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerceProcurementSystem.Models.Vendor", "Vendor")
                        .WithMany("AnnualSaleAmounts")
                        .HasForeignKey("Vendor_Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ECommerceProcurementSystem.Models.City", b =>
                {
                    b.Navigation("AnnualSaleAmounts");
                });

            modelBuilder.Entity("ECommerceProcurementSystem.Models.Vendor", b =>
                {
                    b.Navigation("AnnualSaleAmounts");
                });
#pragma warning restore 612, 618
        }
    }
}
